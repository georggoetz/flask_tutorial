name: Build

on:
  pull_request:
    branches: [ "master", "main" ]
    types: [opened, synchronize, reopened]
  push:
    branches-ignore: [ "master", "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  security-events: write

jobs:
  # Quick success job for release-please PRs
  release-check:
    runs-on: ubuntu-latest
    if: startsWith(github.head_ref, 'release-please--')
    steps:
      - name: Release PR - Skip intensive checks
        run: echo "âœ… Release PR detected - skipping intensive checks"

  test:
    runs-on: ubuntu-latest
    if: false  # TEMP DISABLED for trigger testing
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: flask_tutorial_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup environment
      uses: ./.github/actions/setup

    - name: Run tests
      uses: ./.github/actions/test

  lint:
    runs-on: ubuntu-latest
    if: false  # TEMP DISABLED for trigger testing
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup environment
      uses: ./.github/actions/setup

    - name: Run linting
      uses: ./.github/actions/lint

  security:
    runs-on: ubuntu-latest
    if: false  # TEMP DISABLED for trigger testing
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup environment
      uses: ./.github/actions/setup

    - name: Run security scans
      uses: ./.github/actions/security
      with:
        upload-artifacts: true

  build:
    runs-on: ubuntu-latest
    if: false  # TEMP DISABLED for trigger testing
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup environment
      uses: ./.github/actions/setup

    - name: Build frontend assets
      run: make webpack

    - name: Test Docker build
      run: docker build -t flask-tutorial:${{ github.sha }} .

  sbom:
    runs-on: ubuntu-latest
    if: false  # TEMP DISABLED for trigger testing
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup environment
      uses: ./.github/actions/setup

    - name: Generate SBOM
      uses: ./.github/actions/sbom
      with:
        upload-artifacts: true
        retention-days: 30